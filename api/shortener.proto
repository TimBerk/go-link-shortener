syntax = "proto3";

package shortener;

option go_package = "github.com/TimBerk/go-link-shortener/api/gen";

service Shortener {
  rpc ShortenURL(ShortenURLRequest) returns (ShortenURLResponse);
  rpc ShortenJSONURL(ShortenJSONURLRequest) returns (ShortenJSONURLResponse);
  rpc Redirect(RedirectRequest) returns (RedirectResponse);
  rpc Ping(PingRequest) returns (PingResponse);
  rpc ShortenBatch(ShortenBatchRequest) returns (ShortenBatchResponse);
  rpc GetUserURLs(GetUserURLsRequest) returns (GetUserURLsResponse);
  rpc DeleteURLs(DeleteURLsRequest) returns (DeleteURLsResponse);
}

message ShortenURLRequest {
  string url = 1;
  string user_id = 2;
}

message ShortenURLResponse {
  string short_url = 1;
  bool exists = 2;
}

message ShortenJSONURLRequest {
  string url = 1;
  string user_id = 2;
}

message ShortenJSONURLResponse {
  string result = 1;
  bool exists = 2;
}

message RedirectRequest {
  string short_url = 1;
  string user_id = 2;
}

message RedirectResponse {
  string original_url = 1;
  bool exists = 2;
  bool is_deleted = 3;
}

message PingRequest {}

message PingResponse {
  bool success = 1;
}

message BatchURL {
  string correlation_id = 1;
  string original_url = 2;
}

message ShortenBatchRequest {
  repeated BatchURL urls = 1;
  string user_id = 2;
}

message BatchResponse {
  string correlation_id = 1;
  string short_url = 2;
}

message ShortenBatchResponse {
  repeated BatchResponse urls = 1;
}

message GetUserURLsRequest {
  string user_id = 1;
}

message UserURL {
  string short_url = 1;
  string original_url = 2;
}

message GetUserURLsResponse {
  repeated UserURL urls = 1;
}

message DeleteURLsRequest {
  repeated string short_urls = 1;
  string user_id = 2;
}

message DeleteURLsResponse {
  bool success = 1;
}