// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "Создает короткую версию переданного URL",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Сократить URL (текстовый формат)",
                "parameters": [
                    {
                        "description": "Оригинальный URL",
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Сокращенный URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "URL уже существует",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/internal/stats": {
            "get": {
                "description": "Возвращает количество ссылок и пользователей в приложении",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить статистику",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StatsRequestJSON"
                        }
                    }
                }
            }
        },
        "/api/shorten": {
            "post": {
                "description": "Создает короткую версию переданного URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Сократить URL (JSON формат)",
                "parameters": [
                    {
                        "description": "Запрос с URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestJSON"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ResponseJSON"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ResponseJSON"
                        }
                    }
                }
            }
        },
        "/api/shorten/batch": {
            "post": {
                "description": "Создает несколько коротких URL за один запрос",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Пакетное создание коротких URL",
                "parameters": [
                    {
                        "description": "Массив URL для сокращения",
                        "name": "urls",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ItemRequest"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/ItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/urls": {
            "get": {
                "description": "Возвращает все сокращенные URL текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "summary": "Получить URL пользователя",
                "responses": {
                    "200": {
                        "description": "Массив URL пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Нет сохраненных URL"
                    }
                }
            },
            "delete": {
                "description": "Помечает указанные URL как удаленные (асинхронно)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить URL пользователя",
                "parameters": [
                    {
                        "description": "Массив коротких URL для удаления",
                        "name": "urls",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Запрос принят в обработку"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Проверяет доступность базы данных",
                "summary": "Проверить соединение с БД",
                "responses": {
                    "200": {
                        "description": "База данных доступна"
                    },
                    "500": {
                        "description": "Ошибка соединения с БД",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Перенаправляет на оригинальный URL по короткому идентификатору",
                "summary": "Перенаправить по короткому URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Короткий идентификатор URL",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Перенаправление на оригинальный URL"
                    },
                    "404": {
                        "description": "URL не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "410": {
                        "description": "URL удален",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ItemRequest": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                }
            }
        },
        "ItemResponse": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "RequestJSON": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseJSON": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "StatsRequestJSON": {
            "type": "object",
            "properties": {
                "urls": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
